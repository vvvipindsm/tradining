//+------------------------------------------------------------------+
//|                                                      ProjectName |
//|                                      Copyright 2020, CompanyName |
//|                                       http://www.companyname.net |
//+------------------------------------------------------------------+

#property version   "1.00"
#include <Trade/Trade.mqh>

int handleTrendMaFast;
int handleTrendMaSlow;

int handleMaFast;
int handleMaMiddle;
int handleMaSlow;
CTrade trade;

int eaMagic = 22;
double eaLots = 0.05;

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int OnInit()
  {
   trade.SetExpertMagicNumber(eaMagic);

   handleTrendMaFast = iMA(_Symbol, PERIOD_H1,8,0,MODE_EMA, PRICE_CLOSE);
   handleTrendMaSlow = iMA(_Symbol, PERIOD_H1, 21, 0, MODE_EMA, PRICE_CLOSE);

   handleMaFast = iMA(_Symbol, PERIOD_M5, 8, 0,MODE_EMA, PRICE_CLOSE);
   handleMaMiddle = iMA(_Symbol, PERIOD_M5,13,0,MODE_EMA, PRICE_CLOSE);
   handleMaSlow = iMA(_Symbol, PERIOD_M5, 21,0, MODE_EMA, PRICE_CLOSE);

   return(INIT_SUCCEEDED);
  }


//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {


  }


//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTick()
  {

   double maTrendFast[], maTrendSlow[];
   CopyBuffer(handleTrendMaFast, 0,0, 1, maTrendFast);
   CopyBuffer(handleTrendMaSlow, 0,0, 1, maTrendSlow);
   double maFast[],maMiddle[],maSlow[];
   CopyBuffer(handleMaFast, 0,0, 1, maFast);
   CopyBuffer(handleMaMiddle, 0,0, 1, maMiddle);
   CopyBuffer(handleMaSlow, 0,0, 1, maSlow);

   double bid = SymbolInfoDouble(_Symbol,SYMBOL_BID) ;
//trand check
   int trendDirection = 0;
   if(maTrendFast[0] > maTrendSlow[0] && bid > maTrendFast[0])
     {

      trendDirection = 1;
     }
   else
      if(maTrendFast[0] < maTrendSlow[0] && bid < maTrendFast[0])
        {
         trendDirection = -1;

        }

//tred check end
//position start
   int positions = 0;
   for(int i = PositionsTotal()-1; i >= 0; i--)
     {
      ulong posTicket = PositionGetTicket(i);
      if(PositionSelectByTicket(posTicket))
        {
         if(PositionGetString(POSITION_SYMBOL) == _Symbol && PositionGetInteger(POSITION_MAGIC) == eaMagic)
           {
            positions = positions + 1;
            if(PositionGetInteger(POSITION_TYPE) == POSITION_TYPE_BUY)
              {
               if(PositionGetDouble(POSITION_VOLUME) >= eaLots)
                 {
                  double tp = PositionGetDouble(POSITION_PRICE_OPEN) + (PositionGetDouble(POSITION_PRICE_OPEN) - PositionGetDouble(POSITION_SL));
                  if(bid >= tp)
                    {
                     if(trade.PositionClosePartial(posTicket,NormalizeDouble(PositionGetDouble(POSITION_VOLUME) /2,2)))
                       {
                        double sl = PositionGetDouble(POSITION_PRICE_OPEN);
                        sl = NormalizeDouble(sl,_Digits);
                        if(trade.PositionModify(posTicket,sl,0))
                          {
                           Comment("Position modified");

                          }

                       }

                    }
                 }
               else
                 {
                  int lowest  = iLowest(_Symbol,PERIOD_M5,MODE_LOW,3,1);
                  double sl = iLow(_Symbol,PERIOD_M5,lowest);
                  sl = NormalizeDouble(sl,_Digits);
                  if(sl  > PositionGetDouble(POSITION_SL))
                    {
                     if(trade.PositionModify(posTicket,sl,0))
                       {
                        Comment("Position Modified");
                       }
                    }
                 }
              }
            else
               if(PositionGetInteger(POSITION_TYPE) == POSITION_TYPE_SELL)
                 {
                  if(PositionGetDouble(POSITION_VOLUME) >= eaLots)
                    {
                     double tp = PositionGetDouble(POSITION_PRICE_OPEN) - (PositionGetDouble(POSITION_SL) - PositionGetDouble(POSITION_PRICE_OPEN));
                     if(bid <= tp)
                       {
                        if(trade.PositionClosePartial(posTicket,NormalizeDouble(PositionGetDouble(POSITION_VOLUME) /2,2)))
                          {
                           double sl = PositionGetDouble(POSITION_PRICE_OPEN);
                           sl = NormalizeDouble(sl,_Digits);
                           if(trade.PositionModify(posTicket,sl,0))
                             {
                              Comment("OrderModified");
                             }


                          }

                       }


                    }
                  else
                    {
                     int highest = iHighest(_Symbol, PERIOD_M5,MODE_HIGH, 3,1);
                     double sl = iHigh(_Symbol, PERIOD_M5,highest);
                     sl = NormalizeDouble(sl,_Digits);
                     if(sl < PositionGetDouble(POSITION_SL))
                       {
                        if(trade.PositionModify(posTicket,sl,0))
                          {
                           Comment("Orer Modified");
                          }

                       }


                    }
                 }



           }

        }

     }
//poisition end
//check order start
   int orders = 0;

   for(int i = OrdersTotal()-1; i >= 0; i--)
     {
      ulong orderTicket = OrderGetTicket(i);
      if(OrderSelect(orderTicket))
        {
         if(OrderGetString(ORDER_SYMBOL) == _Symbol && OrderGetInteger(ORDER_MAGIC) == eaMagic)
           {
            if(OrderGetInteger(ORDER_TIME_SETUP) < TimeCurrent() - 30 * PeriodSeconds(PERIOD_M1))
              {
               trade.OrderDelete(orderTicket);
              }

            orders = orders + 1;

           }

        }

     }

//order section end

//up trend start

   if(trendDirection == 1)
     {

      if(maFast[0] > maMiddle[0] && maMiddle[0] > maSlow[0])
        {

         if(bid <= maFast[0])
           {

            if(positions + orders <= 0)
              {

               int indexHighest = iHighest(_Symbol, PERIOD_M5,MODE_HIGH,5,1);
               double highPrice = iHigh(_Symbol, PERIOD_M5, indexHighest);
               highPrice = NormalizeDouble(highPrice,_Digits);



               double sl = iLow(_Symbol,PERIOD_M5,0) - 30 * _Point;

               sl = NormalizeDouble(sl,_Digits);



               trade.BuyStop(eaLots, highPrice,_Symbol,sl);

              }

           }

        }

     }
//up trand end
   else
      if(trendDirection == -1)
        {
         if(maFast[0] < maMiddle[0] && maMiddle[0] < maSlow[0])
           {
            if(bid >= maFast[0])
              {
               if(positions + orders <= 0)
                 {
                  int indexLowest = iLowest(_Symbol, PERIOD_M5,MODE_LOW,5,1);
                  double lowestPrice = iLow(_Symbol, PERIOD_M5, indexLowest);
                  lowestPrice = NormalizeDouble(lowestPrice,_Digits);
                  double sl = iHigh(_Symbol, PERIOD_M5,0) + 30 * _Point;
                  sl = NormalizeDouble(sl,_Digits);
                  trade.SellStop(eaLots, lowestPrice,_Symbol,sl);
                 }
              }
           }
        }

  }

//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTrade()
  {


  }

//+------------------------------------------------------------------+


//https://www.youtube.com/watch?v=vFlFmWKx6Zs&list=PLeQQbTeiG3sD5QS8ExpmRoJGz1vvFz4nv&index=10